// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ABLE Stacks Guest System Stacks 1`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821": Object {
      "Export": Object {
        "Name": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
      },
      "Value": Object {
        "Ref": "MonitorAlarmTopic9C746E8C",
      },
    },
  },
  "Resources": Object {
    "MonitorAlarmEmail9C782A25": Object {
      "Properties": Object {
        "Endpoint": "notify-monitoring@example.com",
        "Protocol": "email",
        "TopicArn": Object {
          "Ref": "MonitorAlarmTopic9C746E8C",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "MonitorAlarmTopic9C746E8C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "MonitorAlarmTopicPolicy7BD5FCD1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "MonitorAlarmTopic9C746E8C",
              },
              "Sid": "0",
            },
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "MonitorAlarmTopic9C746E8C",
              },
              "Sid": "1",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "MonitorAlarmTopic9C746E8C",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 2`] = `
Object {
  "Resources": Object {
    "ChatbotChannel": Object {
      "Properties": Object {
        "ConfigurationName": "ABLE-ChatbotMonitor",
        "IamRoleArn": Object {
          "Fn::GetAtt": Array [
            "ChatbotRole8A87AA1F",
            "Arn",
          ],
        },
        "SlackChannelId": "C01YYYYYYYY",
        "SlackWorkspaceId": "T8XXXXXXX",
        "SnsTopicArns": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
      },
      "Type": "AWS::Chatbot::SlackChannelConfiguration",
    },
    "ChatbotRole8A87AA1F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "chatbot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/ReadOnlyAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchReadOnlyAccess",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 3`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttKey961B73FDArn5A860C43": Object {
      "Export": Object {
        "Name": "ABLE-GeneralLogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "Key961B73FD",
          "Arn",
        ],
      },
    },
  },
  "Resources": Object {
    "Key961B73FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "for General Logs",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "KeyAlias910D852D": Object {
      "Properties": Object {
        "AliasName": "alias/for-generallog",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "Key961B73FD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 4`] = `
Object {
  "Resources": Object {
    "GeneralLogBucket79898759": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::ImportValue": "ABLE-GeneralLogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 5`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttKey961B73FDArn5A860C43": Object {
      "Export": Object {
        "Name": "ABLE-FlowlogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "Key961B73FD",
          "Arn",
        ],
      },
    },
  },
  "Resources": Object {
    "Key961B73FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "for VPC Flow log",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "KeyAlias910D852D": Object {
      "Properties": Object {
        "AliasName": "alias/for-flowlog",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "Key961B73FD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 6`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttFlowLogBucket0863ACCAArnA4795174": Object {
      "Export": Object {
        "Name": "ABLE-FlowLog:ExportsOutputFnGetAttFlowLogBucket0863ACCAArnA4795174",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "FlowLogBucket0863ACCA",
          "Arn",
        ],
      },
    },
  },
  "Resources": Object {
    "FlowLogBucket0863ACCA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::ImportValue": "ABLE-FlowlogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 7`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefVpc8378EB38272D6E3A": Object {
      "Export": Object {
        "Name": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
      },
      "Value": Object {
        "Ref": "Vpc8378EB38",
      },
    },
    "ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940": Object {
      "Export": Object {
        "Name": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
      },
      "Value": Object {
        "Ref": "VpcPrivateSubnet1Subnet536B997A",
      },
    },
    "ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3": Object {
      "Export": Object {
        "Name": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
      },
      "Value": Object {
        "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
      },
    },
    "ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6": Object {
      "Export": Object {
        "Name": "ABLE-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
      },
      "Value": Object {
        "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
      },
    },
    "ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB": Object {
      "Export": Object {
        "Name": "ABLE-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
      },
      "Value": Object {
        "Ref": "VpcProtectedSubnet2SubnetC22C3325",
      },
    },
    "ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456": Object {
      "Export": Object {
        "Name": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
      },
      "Value": Object {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
      },
    },
    "ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740": Object {
      "Export": Object {
        "Name": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
      },
      "Value": Object {
        "Ref": "VpcPublicSubnet2Subnet691E08A3",
      },
    },
  },
  "Resources": Object {
    "NaclPrivate8CEDB4C5": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPrivateDefaultAssociationABLEVpcPrivateSubnet1B47D5031AE0BE520": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateDefaultAssociationABLEVpcPrivateSubnet26E67BDCC2984A182": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateNaclEgressPrivate072DB69C": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPrivateNaclIngressPrivate7EEDF85F": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 120,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublic8DAE29D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPublicDefaultAssociationABLEVpcPublicSubnet1627E0198DEEB8BFC": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicDefaultAssociationABLEVpcPublicSubnet29AC31E4927265808": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicNaclEgressPublic3EA4D0C4": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublicNaclIngressPublicF18E2B85": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.100.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcEc2EndpointForPrivateEB1488F4": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEc2EndpointForPrivateSecurityGroupF9FF14F0",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ec2",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEc2EndpointForPrivateSecurityGroupF9FF14F0": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-Vpc/Vpc/Ec2EndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEc2MessagesEndpointForPrivate0809410D": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEc2MessagesEndpointForPrivateSecurityGroup7FBFF800",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ec2messages",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEc2MessagesEndpointForPrivateSecurityGroup7FBFF800": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-Vpc/Vpc/Ec2MessagesEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEcrDkrEndpointForPrivate351B435F": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEcrDkrEndpointForPrivateSecurityGroup116DBAFC",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ecr.dkr",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDkrEndpointForPrivateSecurityGroup116DBAFC": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-Vpc/Vpc/EcrDkrEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcFlowLogsFlowLogBB096F0F": Object {
      "Properties": Object {
        "LogDestination": Object {
          "Fn::ImportValue": "ABLE-FlowLog:ExportsOutputFnGetAttFlowLogBucket0863ACCAArnA4795174",
        },
        "LogDestinationType": "s3",
        "ResourceId": Object {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcLogsEndpointForPrivate8D2140E9": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcLogsEndpointForPrivateSecurityGroupDD7F0AEB",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".logs",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcLogsEndpointForPrivateSecurityGroupDD7F0AEB": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-Vpc/Vpc/LogsEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.4.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.8.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet1RouteTable69FCECD8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet1RouteTableAssociation62F625F2": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "SubnetId": Object {
          "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet1Subnet38ECE18A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.12.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet2RouteTableAssociation960FE2AC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "SubnetId": Object {
          "Ref": "VpcProtectedSubnet2SubnetC22C3325",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet2RouteTableFA54AE0B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet2SubnetC22C3325": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.16.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcS3EndpointForPrivateA3FD7ECC": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
          },
          Object {
            "Ref": "VpcPrivateSubnet2RouteTableA678073B",
          },
          Object {
            "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
          },
          Object {
            "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointForPrivateF5DD8C02": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmEndpointForPrivateSecurityGroupB1574261",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ssm",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointForPrivateSecurityGroupB1574261": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-Vpc/Vpc/SsmEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmMessagesEndpointForPrivate03FDDCE7": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmMessagesEndpointForPrivateSecurityGroup37880960",
              "GroupId",
            ],
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".ssmmessages",
            ],
          ],
        },
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmMessagesEndpointForPrivateSecurityGroup37880960": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-Vpc/Vpc/SsmMessagesEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "ABLE-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 8`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119": Object {
      "Export": Object {
        "Name": "ABLE-ASGApp:ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SgApp7DE78E7E",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": Object {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AlbAppFFAFE0DC": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "AlbLogBucketC26F4D8A",
            },
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgAlbEA3AC417",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
          },
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbAppListerner0BDB329F": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TgApp5918B053",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "AlbAppFFAFE0DC",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AlbLogBucketC26F4D8A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "AlbLogBucketPolicy222549B1": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AlbLogBucketC26F4D8A",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AlbLogBucketC26F4D8A",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AlbLogBucketC26F4D8A",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AlbLogBucketC26F4D8A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AsgAppASG65DC93B2": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 60,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AsgAppLaunchConfig341A9477",
        },
        "MaxSize": "4",
        "MinSize": "2",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "PropagateAtLaunch": true,
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "AppServer",
          },
          Object {
            "Key": "Role",
            "PropagateAtLaunch": true,
            "Value": "FRA_AppServer",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TgApp5918B053",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
          },
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AsgAppInstanceProfile21D0A966": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ssminstancerole0E7D791C",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AsgAppLaunchConfig341A9477": Object {
      "DependsOn": Array [
        "ssminstancerole0E7D791C",
      ],
      "Properties": Object {
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "VolumeSize": 10,
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "AsgAppInstanceProfile21D0A966",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgApp7DE78E7E",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
sudo yum -y install httpd
sudo systemctl enable httpd
sudo systemctl start httpd
touch /var/www/html/index.html
chown apache.apache /var/www/html/index.html",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "AsgAppScalingPolicykeepSpareCPU63DAB833": Object {
      "Properties": Object {
        "AutoScalingGroupName": Object {
          "Ref": "AsgAppASG65DC93B2",
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ASGAverageCPUUtilization",
          },
          "TargetValue": 50,
        },
      },
      "Type": "AWS::AutoScaling::ScalingPolicy",
    },
    "SgAlbEA3AC417": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-ASGApp/SgAlb",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgAlbtoABLEASGAppSgApp6A57C77B80B4F84221": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "SgApp7DE78E7E",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SgAlbEA3AC417",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SgApp7DE78E7E": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-ASGApp/SgApp",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgAppfromABLEASGAppSgAlbB65A61DC80431E5DCF": Object {
      "Properties": Object {
        "Description": "from ABLEASGAppSgAlbB65A61DC:80",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SgApp7DE78E7E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "SgAlbEA3AC417",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "TgApp5918B053": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "HealthCheckPath": "/index.html",
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "60",
          },
        ],
        "TargetType": "instance",
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ssminstancerole0E7D791C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 9`] = `
Object {
  "Parameters": Object {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AlbAppFFAFE0DC": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "AlbLogBucketC26F4D8A",
            },
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgAlbEA3AC417",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
          },
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbAppListnerApp18657E8F": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TgApp5918B053",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "AlbAppFFAFE0DC",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AlbLogBucketC26F4D8A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "AlbLogBucketPolicy222549B1": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "AlbLogBucketC26F4D8A",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AlbLogBucketC26F4D8A",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "AlbLogBucketC26F4D8A",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AlbLogBucketC26F4D8A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "AppEc20ABA98CDE": Object {
      "DependsOn": Array [
        "ssminstancerole0E7D791C",
      ],
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "VolumeSize": 10,
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "AppEc20InstanceProfileE4E834F4",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgApp7DE78E7E",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "AppServer0",
          },
          Object {
            "Key": "Role",
            "Value": "FRA_AppServer",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
sudo yum -y install httpd
sudo systemctl enable httpd
sudo systemctl start httpd
touch /var/www/html/index.html
chown apache.apache /var/www/html/index.html",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "AppEc20InstanceProfileE4E834F4": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ssminstancerole0E7D791C",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AppEc214159FB59": Object {
      "DependsOn": Array [
        "ssminstancerole0E7D791C",
      ],
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "VolumeSize": 10,
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "AppEc21InstanceProfile951A10DD",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgApp7DE78E7E",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "AppServer1",
          },
          Object {
            "Key": "Role",
            "Value": "FRA_AppServer",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
sudo yum -y install httpd
sudo systemctl enable httpd
sudo systemctl start httpd
touch /var/www/html/index.html
chown apache.apache /var/www/html/index.html",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "AppEc21InstanceProfile951A10DD": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ssminstancerole0E7D791C",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "SgAlbEA3AC417": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-EC2App/SgAlb",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgApp7DE78E7E": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-EC2App/SgApp",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgAppfromABLEEC2AppSgAlb7B19535B8044395A9F": Object {
      "Properties": Object {
        "Description": "from ABLEEC2AppSgAlb7B19535B:80",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SgApp7DE78E7E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "SgAlbEA3AC417",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "TgApp5918B053": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "HealthCheckPath": "/index.html",
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "60",
          },
        ],
        "TargetType": "instance",
        "Targets": Array [
          Object {
            "Id": Object {
              "Ref": "AppEc20ABA98CDE",
            },
          },
          Object {
            "Id": Object {
              "Ref": "AppEc214159FB59",
            },
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ssminstancerole0E7D791C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 10`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttapprepo60CBE1D0ArnCF800CDF": Object {
      "Export": Object {
        "Name": "ABLE-ECR:ExportsOutputFnGetAttapprepo60CBE1D0ArnCF800CDF",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "apprepo60CBE1D0",
          "Arn",
        ],
      },
    },
    "ExportsOutputRefapprepo60CBE1D08890BEDC": Object {
      "Export": Object {
        "Name": "ABLE-ECR:ExportsOutputRefapprepo60CBE1D08890BEDC",
      },
      "Value": Object {
        "Ref": "apprepo60CBE1D0",
      },
    },
  },
  "Resources": Object {
    "apprepo60CBE1D0": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "ImageScanningConfiguration": Object {
          "ScanOnPush": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "apprepoImageScanCompleteAA5AE0A9": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "repository-name": Array [
              Object {
                "Ref": "apprepo60CBE1D0",
              },
            ],
            "scan-status": Array [
              "COMPLETE",
            ],
          },
          "detail-type": Array [
            "ECR Image Scan",
          ],
          "source": Array [
            "aws.ecr",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 11`] = `
Object {
  "Parameters": Object {
    "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dArtifactHashBC261AD6": Object {
      "Description": "Artifact hash for asset \\"a5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04d\\"",
      "Type": "String",
    },
    "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3BucketDDD15B67": Object {
      "Description": "S3 bucket for asset \\"a5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04d\\"",
      "Type": "String",
    },
    "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3VersionKey76284988": Object {
      "Description": "S3 key for asset version \\"a5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04d\\"",
      "Type": "String",
    },
    "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bArtifactHash148EA76C": Object {
      "Description": "Artifact hash for asset \\"c3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50b\\"",
      "Type": "String",
    },
    "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bS3Bucket3DE7C4A9": Object {
      "Description": "S3 bucket for asset \\"c3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50b\\"",
      "Type": "String",
    },
    "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bS3VersionKey321C6667": Object {
      "Description": "S3 key for asset version \\"c3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50b\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3BucketDDD15B67",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3VersionKey76284988",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3VersionKey76284988",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "sampleappproject1B1B27DE": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "AWS_DEFAULT_REGION",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "AWS::Region",
              },
            },
            Object {
              "Name": "AWS_ACCOUNT_ID",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "AWS::AccountId",
              },
            },
            Object {
              "Name": "IMAGE_TAG",
              "Type": "PLAINTEXT",
              "Value": "sample-app",
            },
            Object {
              "Name": "IMAGE_REPO_NAME",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::ImportValue": "ABLE-ECR:ExportsOutputRefapprepo60CBE1D08890BEDC",
              },
            },
          ],
          "Image": "aws/codebuild/standard:4.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "sampleappprojectRoleE074BB24",
            "Arn",
          ],
        },
        "Source": Object {
          "Location": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bS3Bucket3DE7C4A9",
                },
                "/",
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bS3VersionKey321C6667",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bS3VersionKey321C6667",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
          "Type": "S3",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "sampleappprojectRoleDefaultPolicy3B2ADD6F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bS3Bucket3DE7C4A9",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "AssetParametersc3641c985a5817398703c6df709295c2b4602a21174ed2ec95c1e02a7000d50bS3Bucket3DE7C4A9",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "sampleappproject1B1B27DE",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "sampleappproject1B1B27DE",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "sampleappproject1B1B27DE",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:CompleteLayerUpload",
                "ecr:InitiateLayerUpload",
                "ecr:PutImage",
                "ecr:UploadLayerPart",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    Object {
                      "Fn::ImportValue": "ABLE-ECR:ExportsOutputRefapprepo60CBE1D08890BEDC",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "sampleappprojectRoleDefaultPolicy3B2ADD6F",
        "Roles": Array [
          Object {
            "Ref": "sampleappprojectRoleE074BB24",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "sampleappprojectRoleE074BB24": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "startBuild2A2C3416": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "startBuildCustomResourcePolicy55D05B4A",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"CodeBuild\\",\\"action\\":\\"startBuild\\",\\"parameters\\":{\\"projectName\\":\\"",
              Object {
                "Ref": "sampleappproject1B1B27DE",
              },
              "\\"},\\"physicalResourceId\\":{\\"id\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "sampleappproject1B1B27DE",
                  "Arn",
                ],
              },
              "\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "startBuildCustomResourcePolicy55D05B4A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "sampleappproject1B1B27DE",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "startBuildCustomResourcePolicy55D05B4A",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 12`] = `
Object {
  "Outputs": Object {
    "EcsAppLoadBalancerDNS24E0BD9F": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "Alb16C2F182",
          "DNSName",
        ],
      },
    },
    "EcsAppServiceURL87E4732E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "Alb16C2F182",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "Alb16C2F182": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "alblogbucketC97CC057",
            },
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgAlbEA3AC417",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
          },
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbHttp4xxAA038176": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Alb16C2F182",
                "LoadBalancerFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "HTTPCode_ELB_4XX_Count",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AlbHttp5xx7EA5097F": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Alb16C2F182",
                "LoadBalancerFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "HTTPCode_ELB_5XX_Count",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AlbPublicListener54E492A7": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "AlbPublicListenerECSGroupF2C3EDC7",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "Alb16C2F182",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AlbPublicListenerECSGroupF2C3EDC7": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "AlbResponseTimeCFBA9063": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::GetAtt": Array [
                "Alb16C2F182",
                "LoadBalancerFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "TargetResponseTime",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 100,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AlbTgHealthyHostCount48815779": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "AlbPublicListener54E492A7",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "AlbPublicListener54E492A7",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "AlbPublicListener54E492A7",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::GetAtt": Array [
                "AlbPublicListenerECSGroupF2C3EDC7",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "HealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 2,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "BsWebAclAssociation": Object {
      "Properties": Object {
        "ResourceArn": Object {
          "Ref": "Alb16C2F182",
        },
        "WebACLArn": Object {
          "Fn::GetAtt": Array [
            "WebAcl",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "Distribution830FAC52": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
            "TargetOriginId": "ABLEECSAppDistributionOrigin10F261298",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "WebBucket12880F5B",
                  "RegionalDomainName",
                ],
              },
              "Id": "ABLEECSAppDistributionOrigin10F261298",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "DistributionOrigin1S3Origin5F5C0696",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "DistributionOrigin1S3Origin5F5C0696": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for ABLEECSAppDistributionOrigin10F261298",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "EcsAppServiceABC8901F": Object {
      "DependsOn": Array [
        "AlbPublicListenerECSGroupF2C3EDC7",
        "AlbPublicListener54E492A7",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "web",
            "ContainerPort": 80,
            "TargetGroupArn": Object {
              "Ref": "AlbPublicListenerECSGroupF2C3EDC7",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "EcsAppServiceSecurityGroup93AFFBE7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
              },
              Object {
                "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
              },
            ],
          },
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "EcsAppTaskDef15257EC1",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "EcsAppServiceSecurityGroup93AFFBE7": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-ECSApp/EcsApp/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsAppServiceSecurityGroupfromABLEECSAppSgAlbE0D48A198076967CD7": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "EcsAppServiceSecurityGroup93AFFBE7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "SgAlbEA3AC417",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EcsAppTaskDef15257EC1": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ABLE-ECR:ExportsOutputFnGetAttapprepo60CBE1D0ArnCF800CDF",
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::ImportValue": "ABLE-ECR:ExportsOutputFnGetAttapprepo60CBE1D0ArnCF800CDF",
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "ABLE-ECR:ExportsOutputRefapprepo60CBE1D08890BEDC",
                  },
                  ":sample-app",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "EcsAppTaskDefwebLogGroup022B5E5D",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "EcsApp",
              },
            },
            "Name": "web",
            "PortMappings": Array [
              Object {
                "ContainerPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "EcsTaskExecutionRoleC0B6A84D",
            "Arn",
          ],
        },
        "Family": "ABLEECSAppEcsAppTaskDef9CC4B194",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "EcsServiceTaskRoleB376410D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EcsAppTaskDefwebLogGroup022B5E5D": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "EcsServiceTaskRoleB376410D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsTaskExecutionRoleC0B6A84D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "ABLE-ECR:ExportsOutputFnGetAttapprepo60CBE1D0ArnCF800CDF",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "EcsAppTaskDefwebLogGroup022B5E5D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
        "Roles": Array [
          Object {
            "Ref": "EcsTaskExecutionRoleC0B6A84D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateCpuUtilD5713973": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "EcsAppServiceABC8901F",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 80,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "RunningTaskCount38288424": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "LessThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "EcsAppServiceABC8901F",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "RunningTaskCount",
        "Namespace": "ECS/ContainerInsights",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SgAlbEA3AC417": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-ECSApp/SgAlb",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgAlbtoABLEECSAppEcsAppServiceSecurityGroup34AAB83980713C053A": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "EcsAppServiceSecurityGroup93AFFBE7",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SgAlbEA3AC417",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "WebAcl": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "ABLEWebAcl",
        "Rules": Array [
          Object {
            "Name": "AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 1,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesCommonRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 2,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 3,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesAmazonIpReputationList",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesLinuxRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 4,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesLinuxRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesLinuxRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesSQLiRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 5,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesSQLiRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "ABLEWebAcl",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "WebBucket12880F5B": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
              ],
              "AllowedOrigins": Array [
                "https://example.com",
                "https://www.example.com",
              ],
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 2555,
              "Status": "Enabled",
              "Transitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "WebBucketPolicy95D08FAA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "WebBucket12880F5B",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "WebBucket12880F5B",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "DistributionOrigin1S3Origin5F5C0696",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "WebBucket12880F5B",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "alblogbucketC97CC057": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "alblogbucketPolicyA74E0CFF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "alblogbucketC97CC057",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "alblogbucketC97CC057",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "alblogbucketC97CC057",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "alblogbucketC97CC057",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 13`] = `
Object {
  "Parameters": Object {
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ABLEDBAuroraPgAuroraSecretC930E3313fdaad7efa858a3daf9490cf0a702aeb": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"dbadmin\\"}",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "Aurora2CBAB212": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "DBClusterParameterGroupName": "default.aurora-postgresql11",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "DatabaseName": "mydbname",
        "EnableCloudwatchLogsExports": Array [
          "postgresql",
        ],
        "Engine": "aurora-postgresql",
        "EngineVersion": "11.9",
        "KmsKeyId": Object {
          "Fn::ImportValue": "ABLE-GeneralLogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "ABLEDBAuroraPgAuroraSecretC930E3313fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "dbadmin",
        "Port": 5432,
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraSecurityGroup3440C66D",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraCPUUtil2EEE6630": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "Aurora2CBAB212",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraInstance10510C5D1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "Aurora2CBAB212",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "instance1",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "EngineVersion": "11.9",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::ImportValue": "ABLE-GeneralLogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraInstance2BC8C1D03": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "Aurora2CBAB212",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "instance2",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "EngineVersion": "11.9",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::ImportValue": "ABLE-GeneralLogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraLogRetentionpostgresqlBFB2AD06": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "Aurora2CBAB212",
              },
              "/postgresql",
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraSecretAttachmentEAAB0558": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "ABLEDBAuroraPgAuroraSecretC930E3313fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "Aurora2CBAB212",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraSecurityGroup3440C66D": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraSecurityGroupABLEASGAppSgApp6A57C77BIndirectPortfrom95D20967": Object {
      "Properties": Object {
        "Description": "to ABLEDBAuroraPgAuroraSecurityGroup99769412:{IndirectPort}",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AuroraSecurityGroup3440C66D",
            "GroupId",
          ],
        },
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::ImportValue": "ABLE-ASGApp:ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119",
        },
        "IpProtocol": "tcp",
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "AuroraSecurityGroupfromABLEASGAppSgApp6A57C77BIndirectPortB0A178A1": Object {
      "Properties": Object {
        "Description": "from ABLEASGAppSgApp6A57C77B:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AuroraSecurityGroup3440C66D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "ABLE-ASGApp:ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119",
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSubnetsC4DF45C9": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Aurora database",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
          },
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RdsEventsCluster": Object {
      "Properties": Object {
        "Enabled": true,
        "EventCategories": Array [
          "failure",
          "failover",
          "maintenance",
        ],
        "SnsTopicArn": Object {
          "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
        },
        "SourceType": "db-cluster",
      },
      "Type": "AWS::RDS::EventSubscription",
    },
    "RdsEventsInstances": Object {
      "Properties": Object {
        "Enabled": true,
        "EventCategories": Array [
          "availability",
          "configuration change",
          "deletion",
          "failover",
          "failure",
          "maintenance",
          "notification",
          "recovery",
        ],
        "SnsTopicArn": Object {
          "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
        },
        "SourceType": "db-instance",
      },
      "Type": "AWS::RDS::EventSubscription",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 14`] = `
Object {
  "Resources": Object {
    "AuroraServerlessB4AF3148": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "DBClusterParameterGroupName": "default.aurora-postgresql10",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraServerlessSubnets5F6FD825",
        },
        "DatabaseName": "mydbname",
        "Engine": "aurora-postgresql",
        "EngineMode": "serverless",
        "KmsKeyId": Object {
          "Fn::ImportValue": "ABLE-GeneralLogKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraServerlessSecret1C21B310",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "AuroraServerlessSecret1C21B310",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "ScalingConfiguration": Object {
          "AutoPause": true,
          "MaxCapacity": 32,
          "MinCapacity": 8,
          "SecondsUntilAutoPause": 600,
        },
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraServerlessSecurityGroup6D85ED85",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraServerlessSecret1C21B310": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"postgres\\"}",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "AuroraServerlessSecretAttachment8CC4D78C": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "AuroraServerlessSecret1C21B310",
        },
        "TargetId": Object {
          "Ref": "AuroraServerlessB4AF3148",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraServerlessSecurityGroup6D85ED85": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraServerlessSubnets5F6FD825": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for AuroraServerless database",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
          },
          Object {
            "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "CPUUtilizationD337B8E3": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "ABLE-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "AuroraServerlessB4AF3148",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
}
`;

exports[`ABLE Stacks Guest System Stacks 15`] = `
Object {
  "Parameters": Object {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "Investigation3C80A90C": Object {
      "DependsOn": Array [
        "ssminstancerole0E7D791C",
      ],
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/xvda",
            "Ebs": Object {
              "Encrypted": true,
              "VolumeSize": 10,
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "InvestigationInstanceProfileB154C4D9",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.micro",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgEC23ABC55F9",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "Investigation",
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash
sudo yum -y install mariadb",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "InvestigationInstanceProfileB154C4D9": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ssminstancerole0E7D791C",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "SgEC23ABC55F9": Object {
      "Properties": Object {
        "GroupDescription": "ABLE-InvestigationInstance/SgEC2",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "ABLE-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ssminstancerole0E7D791C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 1`] = `
Object {
  "Resources": Object {
    "GuardDutyDetector": Object {
      "Properties": Object {
        "Enable": true,
      },
      "Type": "AWS::GuardDuty::Detector",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 2`] = `
Object {
  "Resources": Object {
    "RoleForSecurityHub": Object {
      "Properties": Object {
        "AWSServiceName": "securityhub.amazonaws.com",
      },
      "Type": "AWS::IAM::ServiceLinkedRole",
    },
    "SecurityHub": Object {
      "Type": "AWS::SecurityHub::Hub",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 3`] = `
Object {
  "Resources": Object {
    "ArchiveLogsBucketBC7EE643": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 2555,
              "Status": "Enabled",
              "Transitions": Array [
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 90,
                },
              ],
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ArchiveLogsBucketPolicy06092225": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ArchiveLogsBucketBC7EE643",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "ArchiveLogsBucketBC7EE643",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Enforce HTTPS Connections",
            },
            Object {
              "Action": "s3:Delete*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "ArchiveLogsBucketBC7EE643",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Restrict Delete* Actions",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CloudTrailA62D711D": Object {
      "DependsOn": Array [
        "CloudTrailLogsRoleDefaultPolicyD9019B15",
        "CloudTrailLogsRole9F6E6663",
        "CloudTrailBucketPolicy2A856177",
      ],
      "Properties": Object {
        "CloudWatchLogsLogGroupArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailLogGroup343A29D6",
            "Arn",
          ],
        },
        "CloudWatchLogsRoleArn": Object {
          "Fn::GetAtt": Array [
            "CloudTrailLogsRole9F6E6663",
            "Arn",
          ],
        },
        "EnableLogFileValidation": true,
        "EventSelectors": Array [],
        "IncludeGlobalServiceEvents": true,
        "IsLogging": true,
        "IsMultiRegionTrail": true,
        "KMSKeyId": Object {
          "Fn::GetAtt": Array [
            "CloudTrailKeyC795273C",
            "Arn",
          ],
        },
        "S3BucketName": Object {
          "Ref": "CloudTrailBucket98B0BFE1",
        },
      },
      "Type": "AWS::CloudTrail::Trail",
    },
    "CloudTrailBucket98B0BFE1": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "ArchiveLogsBucketBC7EE643",
          },
          "LogFilePrefix": "cloudtraillogs",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudTrailBucketPolicy2A856177": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CloudTrailBucket98B0BFE1",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudTrailBucket98B0BFE1",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Enforce HTTPS Connections",
            },
            Object {
              "Action": "s3:Delete*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudTrailBucket98B0BFE1",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Restrict Delete* Actions",
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CloudTrailBucket98B0BFE1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudTrailBucket98B0BFE1",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CloudTrailKeyAliasD751BA20": Object {
      "Properties": Object {
        "AliasName": "alias/for-cloudtrail",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "CloudTrailKeyC795273C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "CloudTrailKeyC795273C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "for CloudTrail",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": "kms:GenerateDataKey*",
              "Condition": Object {
                "StringLike": Object {
                  "kms:EncryptionContext:aws:cloudtrail:arn": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:aws:cloudtrail:*:",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":trail/*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": "*",
            },
            Object {
              "Action": "kms:DescribeKey",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:ReEncryptFrom",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "kms:CallerAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
                "StringLike": Object {
                  "kms:EncryptionContext:aws:cloudtrail:arn": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:aws:cloudtrail:*:",
                          Object {
                            "Ref": "AWS::AccountId",
                          },
                          ":trail/*",
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": "*",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Condition": Object {
                "ArnEquals": Object {
                  "kms:EncryptionContext:aws:logs:arn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:undefined:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "logs.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudTrailLogGroup343A29D6": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "CloudTrailKeyC795273C",
            "Arn",
          ],
        },
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudTrailLogsRole9F6E6663": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudTrailLogsRoleDefaultPolicyD9019B15": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CloudTrailLogGroup343A29D6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudTrailLogsRoleDefaultPolicyD9019B15",
        "Roles": Array [
          Object {
            "Ref": "CloudTrailLogsRole9F6E6663",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudTrailRole9EE963D2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudTrailRoleDefaultPolicy5FF2FCDE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CloudTrailBucket98B0BFE1",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CloudTrailBucket98B0BFE1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CloudTrailBucket98B0BFE1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudTrailRoleDefaultPolicy5FF2FCDE",
        "Roles": Array [
          Object {
            "Ref": "CloudTrailRole9EE963D2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RootUserPolicyEventCount35663DD3": Object {
      "Properties": Object {
        "FilterPattern": "{$.userIdentity.type=\\"Root\\" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !=\\"AwsServiceEvent\\"}",
        "LogGroupName": Object {
          "Ref": "CloudTrailLogGroup343A29D6",
        },
        "MetricTransformations": Array [
          Object {
            "MetricName": "RootUserPolicyEventCount",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 4`] = `
Object {
  "Resources": Object {
    "IamAdminGroupA13BD09E": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "IamAdminPolicy0D291B9C",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "IamAdminPolicy0D291B9C": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:MultiFactorAuthPresent": "true",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "IamAdminRole7F81A4F9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "IamAdminPolicy0D291B9C",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceOpsGroup70D35B0F": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "InstanceOpsPolicyACF13D80",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "InstanceOpsPolicyACF13D80": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ec2:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "elasticloadbalancing:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cloudwatch:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "autoscaling:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:CreateVpc*",
                "ec2:DeleteVpc*",
                "ec2:ModifyVpc*",
                "ec2:CreateSubnet*",
                "ec2:DeleteSubnet*",
                "ec2:ModifySubnet*",
                "ec2:Create*Route*",
                "ec2:DeleteRoute*",
                "ec2:AssociateRoute*",
                "ec2:ReplaceRoute*",
                "ec2:CreateVpn*",
                "ec2:DeleteVpn*",
                "ec2:AttachVpn*",
                "ec2:DetachVpn*",
                "ec2:CreateNetworkAcl*",
                "ec2:DeleteNetworkAcl*",
                "ec2:ReplaceNetworkAcl*",
                "ec2:*Gateway*",
                "ec2:*PeeringConnection*",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Revoke*",
                "kms:Enable*",
                "kms:Get*",
                "kms:Disable*",
                "kms:Delete*",
                "kms:Put*",
                "kms:Update*",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "InstanceOpsRole4285322B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "InstanceOpsPolicyACF13D80",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ReadOnlyAdminGroup48654107": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "ReadOnlyAdminPolicyBB7EEA25",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "ReadOnlyAdminPolicyBB7EEA25": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "ReadOnlyAdminRole76DC872B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "ReadOnlyAdminPolicyBB7EEA25",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SysAdminGroupA408C9E0": Object {
      "Properties": Object {
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "SysAdminPolicy90C47C4A",
          },
        ],
      },
      "Type": "AWS::IAM::Group",
    },
    "SysAdminPolicy90C47C4A": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Condition": Object {
                "Bool": Object {
                  "aws:MultiFactorAuthPresent": "true",
                },
              },
              "Effect": "Allow",
              "NotAction": "iam:*",
              "Resource": "*",
            },
            Object {
              "Action": "aws-portal:*Billing",
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "cloudtrail:DeleteTrail",
                "cloudtrail:StopLogging",
                "cloudtrail:UpdateTrail",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Revoke*",
                "kms:Enable*",
                "kms:Get*",
                "kms:Disable*",
                "kms:Delete*",
                "kms:Put*",
                "kms:Update*",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "SysAdminRoleC29628DF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "SysAdminPolicy90C47C4A",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 5`] = `
Object {
  "Resources": Object {
    "ConfigBucket2112C5EC": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ConfigBucketPolicy6D5E90FF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ConfigBucket2112C5EC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "ConfigRoleF94F46B6",
                    "Arn",
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ConfigBucket2112C5EC",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "ConfigRoleF94F46B6",
                    "Arn",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "ConfigBucket2112C5EC",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/Config/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ConfigDeliveryChannel": Object {
      "Properties": Object {
        "S3BucketName": Object {
          "Ref": "ConfigBucket2112C5EC",
        },
      },
      "Type": "AWS::Config::DeliveryChannel",
    },
    "ConfigRecorder": Object {
      "Properties": Object {
        "RecordingGroup": Object {
          "AllSupported": true,
        },
        "RoleARN": Object {
          "Fn::GetAtt": Array [
            "ConfigRoleF94F46B6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Config::ConfigurationRecorder",
    },
    "ConfigRoleF94F46B6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "config.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSConfigRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 6`] = `
Object {
  "Resources": Object {
    "CheckForEbsOptimizedInstance": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForEbsOptimizedInstance",
        "Description": "Disallow launch of EC2 instance types that are not EBS-optimized - Checks whether EBS optimization is enabled for your EC2 instances that can be EBS-optimized",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::Instance",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "EBS_OPTIMIZED_INSTANCE",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForEc2VolumesInUse": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForEc2VolumesInUs",
        "Description": "Disallow EBS volumes that are unattached to an EC2 instance - Checks whether EBS volumes are attached to EC2 instances",
        "InputParameters": Object {
          "deleteOnTermination": true,
        },
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::Volume",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_VOLUME_INUSE_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForEncryptedVolumes": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForEncryptedVolumes",
        "Description": "Enable encryption for EBS volumes attached to EC2 instances - Checks whether EBS volumes that are in an attached state are encrypted.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::Volume",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "ENCRYPTED_VOLUMES",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForIAMUserConsoleMFA": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForIAMUserConsoleMFA",
        "Description": "Disallow console access to IAM users without MFA - Checks whether AWS Multi-Factor Authentication (MFA) is enabled for all AWS Identity and Access Management (IAM) users that use a console password. The rule is COMPLIANT if MFA is enabled.",
        "MaximumExecutionFrequency": "One_Hour",
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForIAMUserMFA": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForIAMUserMFA",
        "Description": "Disallow access to IAM users without MFA - Checks whether the AWS Identity and Access Management users have multi-factor authentication (MFA) enabled. The rule is COMPLIANT if MFA is enabled.",
        "MaximumExecutionFrequency": "One_Hour",
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_USER_MFA_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForPublicRdsSnapshots": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForPublicRdsSnapshots",
        "Description": "Disallow public access to RDS database snapshots - Checks if Amazon Relational Database Service (Amazon RDS) snapshots are public. The rule is non-compliant if any existing and new Amazon RDS snapshots are public.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::RDS::DBSnapshot",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "RDS_SNAPSHOTS_PUBLIC_PROHIBITED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRdsPublicAccess": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRdsPublicAccess",
        "Description": "Disallow public access to RDS database instances - Checks whether the Amazon Relational Database Service (RDS) instances are not publicly accessible. The rule is non-compliant if the publiclyAccessible field is true in the instance configuration item.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::RDS::DBInstance",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "RDS_INSTANCE_PUBLIC_ACCESS_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRdsStorageEncryption": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRdsStorageEncryption",
        "Description": "Disallow RDS database instances that are not storage encrypted - Checks whether storage encryption is enabled for your RDS DB instances.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::RDS::DBInstance",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "RDS_STORAGE_ENCRYPTED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRestrictedCommonPortsPolicy": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRestrictedCommonPortsPolicy",
        "Description": "Disallow internet connection through RDP - Checks whether security groups that are in use disallow unrestricted incoming TCP traffic to the specified ports.",
        "InputParameters": Object {
          "blockedPort1": 20,
          "blockedPort2": 21,
          "blockedPort3": 3389,
          "blockedPort4": 3306,
          "blockedPort5": 4333,
        },
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::SecurityGroup",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "RESTRICTED_INCOMING_TRAFFIC",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRestrictedSshPolicy": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRestrictedSshPolicy",
        "Description": "Disallow internet connection through SSH - Checks whether security groups that are in use disallow unrestricted incoming SSH traffic.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::SecurityGroup",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "INCOMING_SSH_DISABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForRootMfa": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForRootMfa",
        "Description": "Enable MFA for the root user - Checks whether the root user of your AWS account requires multi-factor authentication for console sign-in.",
        "MaximumExecutionFrequency": "One_Hour",
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "ROOT_ACCOUNT_MFA_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForS3PublicRead": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForS3PublicRead",
        "Description": "Disallow public read access to S3 buckets - Checks that your S3 buckets do not allow public read access. If an S3 bucket policy or bucket ACL allows public read access, the bucket is noncompliant.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::S3::Bucket",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_PUBLIC_READ_PROHIBITED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForS3PublicWrite": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForS3PublicWrite",
        "Description": "Disallow public write access to S3 buckets - Checks that your S3 buckets do not allow public write access. If an S3 bucket policy or bucket ACL allows public write access, the bucket is noncompliant.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::S3::Bucket",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_PUBLIC_WRITE_PROHIBITED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "CheckForS3VersioningEnabled": Object {
      "Properties": Object {
        "ConfigRuleName": "CheckForS3VersioningEnabled",
        "Description": "Disallow S3 buckets that are not versioning enabled - Checks whether versioning is enabled for your S3 buckets.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::S3::Bucket",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_VERSIONING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 7`] = `
Object {
  "Resources": Object {
    "ABLERuleDefaultSecurityGroupClosed3A4B84A3": Object {
      "Properties": Object {
        "ConfigRuleName": "gc-default-security-group-closed",
        "Description": "Checks that the default security group of any Amazon Virtual Private Cloud (VPC) does not allow inbound or outbound traffic. The rule is non-compliant if the default security group has one or more inbound or outbound traffic.",
        "Scope": Object {
          "ComplianceResourceTypes": Array [
            "AWS::EC2::SecurityGroup",
          ],
        },
        "Source": Object {
          "Owner": "AWS",
          "SourceIdentifier": "VPC_DEFAULT_SECURITY_GROUP_CLOSED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "RemoveSecGroupRemediationRoleDefaultPolicyF609DBB1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:RevokeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:DescribeSecurityGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "RemoveSecGroupRemediationRoleE508F214",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "ssm:StartAutomationExecution",
              "Effect": "Allow",
              "Resource": "arn:aws:ssm:::automation-definition/AWSConfigRemediation-RemoveVPCDefaultSecurityGroupRules",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RemoveSecGroupRemediationRoleDefaultPolicyF609DBB1",
        "Roles": Array [
          Object {
            "Ref": "RemoveSecGroupRemediationRoleE508F214",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RemoveSecGroupRemediationRoleE508F214": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole",
        ],
        "Path": "/",
      },
      "Type": "AWS::IAM::Role",
    },
    "RmDefaultSg": Object {
      "Properties": Object {
        "Automatic": true,
        "ConfigRuleName": Object {
          "Ref": "ABLERuleDefaultSecurityGroupClosed3A4B84A3",
        },
        "MaximumAutomaticAttempts": 5,
        "Parameters": Object {
          "AutomationAssumeRole": Object {
            "StaticValue": Object {
              "Values": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "RemoveSecGroupRemediationRoleE508F214",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "GroupId": Object {
            "ResourceValue": Object {
              "Value": "RESOURCE_ID",
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": "AWSConfigRemediation-RemoveVPCDefaultSecurityGroupRules",
        "TargetType": "SSM_DOCUMENT",
        "TargetVersion": "1",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 8`] = `
Object {
  "Resources": Object {
    "ChatbotChannel": Object {
      "Properties": Object {
        "ConfigurationName": "ABLE-ChatbotSecurity",
        "IamRoleArn": Object {
          "Fn::GetAtt": Array [
            "ChatbotRole8A87AA1F",
            "Arn",
          ],
        },
        "SlackChannelId": "C01XXXXXXXX",
        "SlackWorkspaceId": "T8XXXXXXX",
        "SnsTopicArns": Array [
          Object {
            "Fn::ImportValue": "ABLE-SecurityAlarm:ExportsOutputRefSecurityAlarmTopicEE71C63385BAAF8E",
          },
        ],
      },
      "Type": "AWS::Chatbot::SlackChannelConfiguration",
    },
    "ChatbotRole8A87AA1F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "chatbot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/ReadOnlyAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchReadOnlyAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`ABLE Stacks LandingZone Stacks 9`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefSecurityAlarmTopicEE71C63385BAAF8E": Object {
      "Export": Object {
        "Name": "ABLE-SecurityAlarm:ExportsOutputRefSecurityAlarmTopicEE71C63385BAAF8E",
      },
      "Value": Object {
        "Ref": "SecurityAlarmTopicEE71C633",
      },
    },
  },
  "Resources": Object {
    "ABLEIAMPolicyChange4A8B4C2E": Object {
      "Properties": Object {
        "Description": "Notify to modify IAM Policy",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "DeleteRolePolicy",
              "DeleteUserPolicy",
              "PutGroupPolicy",
              "PutRolePolicy",
              "PutUserPolicy",
              "CreatePolicy",
              "DeletePolicy",
              "CreatePolicyVersion",
              "DeletePolicyVersion",
              "AttachRolePolicy",
              "DetachRolePolicy",
              "AttachUserPolicy",
              "DetachUserPolicy",
              "AttachGroupPolicy",
              "DetachGroupPolicy",
            ],
            "eventSource": Array [
              "iam.amazonaws.com",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleAwsHealthA9595DE9": Object {
      "Properties": Object {
        "Description": "Notify AWS Health event",
        "EventPattern": Object {
          "detail-type": Array [
            "AWS Health Event",
          ],
          "source": Array [
            "aws.health",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleCloudTrailChange350B2AF4": Object {
      "Properties": Object {
        "Description": "Notify to change on CloudTrail log configuration",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "StopLogging",
              "DeleteTrail",
              "UpdateTrail",
            ],
            "eventSource": Array [
              "cloudtrail.amazonaws.com",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleConfigRulesD1530AD2": Object {
      "Properties": Object {
        "Description": "CloudWatch Event Rule to send notification on Config Rule compliance changes.",
        "EventPattern": Object {
          "detail": Object {
            "newEvaluationResult": Object {
              "complianceType": Array [
                "NON_COMPLIANT",
              ],
            },
          },
          "detail-type": Array [
            "Config Rules Compliance Change",
          ],
          "source": Array [
            "aws.config",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleGuardDutyFA4063E9": Object {
      "Properties": Object {
        "Description": "CloudWatch Event Rule to send notification on GuardDuty findings.",
        "EventPattern": Object {
          "detail": Object {
            "severity": Array [
              4,
              4,
              4.1,
              4.2,
              4.3,
              4.4,
              4.5,
              4.6,
              4.7,
              4.8,
              4.9,
              5,
              5,
              5.1,
              5.2,
              5.3,
              5.4,
              5.5,
              5.6,
              5.7,
              5.8,
              5.9,
              6,
              6,
              6.1,
              6.2,
              6.3,
              6.4,
              6.5,
              6.6,
              6.7,
              6.8,
              6.9,
              7,
              7,
              7.1,
              7.2,
              7.3,
              7.4,
              7.5,
              7.6,
              7.7,
              7.8,
              7.9,
              8,
              8,
              8.1,
              8.2,
              8.3,
              8.4,
              8.5,
              8.6,
              8.7,
              8.8,
              8.9,
            ],
          },
          "detail-type": Array [
            "GuardDuty Finding",
          ],
          "source": Array [
            "aws.guardduty",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleNetworkAclChange77763030": Object {
      "Properties": Object {
        "Description": "Notify to create, update or delete a Network ACL.",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "CreateNetworkAcl",
              "CreateNetworkAclEntry",
              "DeleteNetworkAcl",
              "DeleteNetworkAclEntry",
              "ReplaceNetworkAclEntry",
              "ReplaceNetworkAclAssociation",
            ],
            "eventSource": Array [
              "ec2.amazonaws.com",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
          "source": Array [
            "aws.ec2",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleNewAccessKeyCreated33AFA429": Object {
      "Properties": Object {
        "Description": "Notify to create new accessKey",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "CreateAccessKey",
            ],
            "eventSource": Array [
              "iam.amazonaws.com",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleRootUserUsedC14917E2": Object {
      "Properties": Object {
        "Description": "Notify to detect root user activity",
        "EventPattern": Object {
          "detail": Object {
            "eventType": Array [
              Object {
                "anything-but": "AwsServiceEvent",
              },
            ],
            "userIdentity": Object {
              "invokedBy": Array [
                Object {
                  "exists": false,
                },
              ],
              "type": Array [
                "Root",
              ],
            },
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleSecurityGroupChange18A13D72": Object {
      "Properties": Object {
        "Description": "Notify to create, update or delete a Security Group.",
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "AuthorizeSecurityGroupIngress",
              "AuthorizeSecurityGroupEgress",
              "RevokeSecurityGroupIngress",
              "RevokeSecurityGroupEgress",
            ],
            "eventSource": Array [
              "ec2.amazonaws.com",
            ],
          },
          "detail-type": Array [
            "AWS API Call via CloudTrail",
          ],
          "source": Array [
            "aws.ec2",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ABLERuleSecurityHub054641B3": Object {
      "Properties": Object {
        "Description": "CloudWatch Event Rule to send notification on SecurityHub all new findings and all updates.",
        "EventPattern": Object {
          "detail": Object {
            "findings": Object {
              "Compliance": Object {
                "Status": Array [
                  "FAILED",
                ],
              },
              "Severity": Object {
                "Label": Array [
                  "CRITICAL",
                  "HIGH",
                ],
              },
              "Workflow": Object {
                "Status": Array [
                  "NEW",
                  "NOTIFIED",
                ],
              },
            },
          },
          "detail-type": Array [
            "Security Hub Findings - Imported",
          ],
          "source": Array [
            "aws.securityhub",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "SecurityAlarmTopicEE71C633",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "RootUserPolicyEventCountAlarm55CEC7AC": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Ref": "SecurityAlarmTopicEE71C633",
          },
        ],
        "AlarmDescription": "Root user activity detected!",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "MetricName": "RootUserPolicyEventCount",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "SecurityAlarmEmailD5EA4C2D": Object {
      "Properties": Object {
        "Endpoint": "notify-security@example.com",
        "Protocol": "email",
        "TopicArn": Object {
          "Ref": "SecurityAlarmTopicEE71C633",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SecurityAlarmTopicEE71C633": Object {
      "Type": "AWS::SNS::Topic",
    },
    "SecurityAlarmTopicPolicyA4A1405F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "SecurityAlarmTopicEE71C633",
              },
              "Sid": "0",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "SecurityAlarmTopicEE71C633",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
  },
}
`;
