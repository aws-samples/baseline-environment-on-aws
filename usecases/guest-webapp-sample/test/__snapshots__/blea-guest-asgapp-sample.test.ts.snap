// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BLEA Guest Stacks GuestAccount ASG App Stacks 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ChatbotChannel": Object {
      "Properties": Object {
        "ConfigurationName": "BLEA-ChatbotMonitor-T8XXXXXXX",
        "IamRoleArn": Object {
          "Fn::GetAtt": Array [
            "ChatbotRole8A87AA1F",
            "Arn",
          ],
        },
        "SlackChannelId": "C01YYYYYYYY",
        "SlackWorkspaceId": "T8XXXXXXX",
        "SnsTopicArns": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
      },
      "Type": "AWS::Chatbot::SlackChannelConfiguration",
    },
    "ChatbotRole8A87AA1F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "chatbot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/ReadOnlyAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchReadOnlyAccess",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ASG App Stacks 2`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821": Object {
      "Export": Object {
        "Name": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
      },
      "Value": Object {
        "Ref": "MonitorAlarmTopic9C746E8C",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MonitorAlarmEmail9C782A25": Object {
      "Properties": Object {
        "Endpoint": "notify-monitoring@example.com",
        "Protocol": "email",
        "TopicArn": Object {
          "Ref": "MonitorAlarmTopic9C746E8C",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "MonitorAlarmTopic9C746E8C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "MonitorAlarmTopicPolicy7BD5FCD1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "MonitorAlarmTopic9C746E8C",
              },
              "Sid": "0",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "MonitorAlarmTopic9C746E8C",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ASG App Stacks 3`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttKey961B73FDArn5A860C43": Object {
      "Export": Object {
        "Name": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "Key961B73FD",
          "Arn",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Key961B73FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "for App",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "KeyAlias910D852D": Object {
      "Properties": Object {
        "AliasName": "alias/BLEA-AppKey-for-app",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "Key961B73FD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ASG App Stacks 4`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefVpc8378EB38272D6E3A": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
      },
      "Value": Object {
        "Ref": "Vpc8378EB38",
      },
    },
    "ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
      },
      "Value": Object {
        "Ref": "VpcPrivateSubnet1Subnet536B997A",
      },
    },
    "ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
      },
      "Value": Object {
        "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
      },
    },
    "ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
      },
      "Value": Object {
        "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
      },
    },
    "ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
      },
      "Value": Object {
        "Ref": "VpcProtectedSubnet2SubnetC22C3325",
      },
    },
    "ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
      },
      "Value": Object {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
      },
    },
    "ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
      },
      "Value": Object {
        "Ref": "VpcPublicSubnet2Subnet691E08A3",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "FlowLogBucket0863ACCA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "Key961B73FD",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "FlowLogBucketPolicyD22C263C": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FlowLogBucket0863ACCA",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FlowLogBucket0863ACCA",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FlowLogBucket0863ACCA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Key961B73FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "for VPC Flow log",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "KeyAlias910D852D": Object {
      "Properties": Object {
        "AliasName": "alias/BLEA-Vpc-for-flowlog",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "Key961B73FD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "NaclPrivate8CEDB4C5": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPrivateDefaultAssociationBLEAVpcPrivateSubnet1EF53EF1ECC2CE1DC": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateDefaultAssociationBLEAVpcPrivateSubnet224E1285EE1D2ADA4": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateNaclEgressPrivate072DB69C": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPrivateNaclIngressPrivate7EEDF85F": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 120,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublic8DAE29D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPublicDefaultAssociationBLEAVpcPublicSubnet1307AA0A438FD5EFD": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicDefaultAssociationBLEAVpcPublicSubnet24705B68BBC24C976": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicNaclEgressPublic3EA4D0C4": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublicNaclIngressPublicF18E2B85": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.100.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcEc2EndpointForPrivateEB1488F4": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEc2EndpointForPrivateSecurityGroupF9FF14F0",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ec2",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEc2EndpointForPrivateSecurityGroupF9FF14F0": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/Ec2EndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEc2MessagesEndpointForPrivate0809410D": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEc2MessagesEndpointForPrivateSecurityGroup7FBFF800",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ec2messages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEc2MessagesEndpointForPrivateSecurityGroup7FBFF800": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/Ec2MessagesEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEcrDkrEndpointForPrivate351B435F": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEcrDkrEndpointForPrivateSecurityGroup116DBAFC",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.dkr",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDkrEndpointForPrivateSecurityGroup116DBAFC": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/EcrDkrEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEcrEndpointForPrivate33BF5765": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEcrEndpointForPrivateSecurityGroup72F5BC77",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.api",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrEndpointForPrivateSecurityGroup72F5BC77": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/EcrEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcFlowLogsFlowLogBB096F0F": Object {
      "DependsOn": Array [
        "FlowLogBucketPolicyD22C263C",
      ],
      "Properties": Object {
        "LogDestination": Object {
          "Fn::GetAtt": Array [
            "FlowLogBucket0863ACCA",
            "Arn",
          ],
        },
        "LogDestinationType": "s3",
        "ResourceId": Object {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcLogsEndpointForPrivate8D2140E9": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcLogsEndpointForPrivateSecurityGroupDD7F0AEB",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.logs",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcLogsEndpointForPrivateSecurityGroupDD7F0AEB": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/LogsEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.4.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.8.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet1RouteTable69FCECD8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet1RouteTableAssociation62F625F2": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "SubnetId": Object {
          "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet1Subnet38ECE18A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.12.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet2RouteTableAssociation960FE2AC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "SubnetId": Object {
          "Ref": "VpcProtectedSubnet2SubnetC22C3325",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet2RouteTableFA54AE0B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet2SubnetC22C3325": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.16.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "DependsOn": Array [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcS3EndpointForPrivateA3FD7ECC": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
          },
          Object {
            "Ref": "VpcPrivateSubnet2RouteTableA678073B",
          },
          Object {
            "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
          },
          Object {
            "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointForPrivateF5DD8C02": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmEndpointForPrivateSecurityGroupB1574261",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ssm",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointForPrivateSecurityGroupB1574261": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/SsmEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmMessagesEndpointForPrivate03FDDCE7": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmMessagesEndpointForPrivateSecurityGroup37880960",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ssmmessages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmMessagesEndpointForPrivateSecurityGroup37880960": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/SsmMessagesEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ASG App Stacks 5`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119": Object {
      "Export": Object {
        "Name": "BLEA-ASGApp:ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SgApp7DE78E7E",
          "GroupId",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": Object {
    "AsgAlb143D9482": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "alblogbucketC97CC057",
            },
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgAlbEA3AC417",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
          },
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AsgAlbAsgListernerEAE9102A": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TgAsgApp43FB21BA",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "AsgAlb143D9482",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AsgAppASG65DC93B2": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 60,
        "HealthCheckType": "ELB",
        "LaunchTemplate": Object {
          "LaunchTemplateId": Object {
            "Ref": "LaunchTemplate04EC5460",
          },
          "Version": Object {
            "Fn::GetAtt": Array [
              "LaunchTemplate04EC5460",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "4",
        "MinSize": "2",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "PropagateAtLaunch": true,
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "AppServer",
          },
          Object {
            "Key": "Role",
            "PropagateAtLaunch": true,
            "Value": "FRA_AppServer",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TgAsgApp43FB21BA",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
          },
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AsgAppScalingPolicykeepSpareCPU63DAB833": Object {
      "Properties": Object {
        "AutoScalingGroupName": Object {
          "Ref": "AsgAppASG65DC93B2",
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ASGAverageCPUUtilization",
          },
          "TargetValue": 50,
        },
      },
      "Type": "AWS::AutoScaling::ScalingPolicy",
    },
    "LaunchTemplate04EC5460": Object {
      "Properties": Object {
        "LaunchTemplateData": Object {
          "BlockDeviceMappings": Array [
            Object {
              "DeviceName": "/dev/xvda",
              "Ebs": Object {
                "Encrypted": true,
                "VolumeSize": 10,
              },
            },
          ],
          "IamInstanceProfile": Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "LaunchTemplateProfile94AA77CE",
                "Arn",
              ],
            },
          },
          "ImageId": Object {
            "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "InstanceType": "t3.micro",
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SgApp7DE78E7E",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": Array [
            Object {
              "ResourceType": "instance",
              "Tags": Array [
                Object {
                  "Key": "Environment",
                  "Value": "Development",
                },
                Object {
                  "Key": "Name",
                  "Value": "BLEA-ASGApp/LaunchTemplate",
                },
              ],
            },
            Object {
              "ResourceType": "volume",
              "Tags": Array [
                Object {
                  "Key": "Environment",
                  "Value": "Development",
                },
                Object {
                  "Key": "Name",
                  "Value": "BLEA-ASGApp/LaunchTemplate",
                },
              ],
            },
          ],
          "UserData": Object {
            "Fn::Base64": "#!/bin/bash
sudo yum -y install httpd
sudo systemctl enable httpd
sudo systemctl start httpd
touch /var/www/html/index.html
chown apache.apache /var/www/html/index.html",
          },
        },
        "TagSpecifications": Array [
          Object {
            "ResourceType": "launch-template",
            "Tags": Array [
              Object {
                "Key": "Environment",
                "Value": "Development",
              },
              Object {
                "Key": "Name",
                "Value": "BLEA-ASGApp/LaunchTemplate",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "LaunchTemplateProfile94AA77CE": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ssminstancerole0E7D791C",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "SgAlbEA3AC417": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-ASGApp/SgAlb",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgAlbtoBLEAASGAppSgApp6E278B2E80114780C5": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "SgApp7DE78E7E",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SgAlbEA3AC417",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SgApp7DE78E7E": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-ASGApp/SgApp",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgAppfromBLEAASGAppSgAlb31E3F23180C71B8125": Object {
      "Properties": Object {
        "Description": "from BLEAASGAppSgAlb31E3F231:80",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SgApp7DE78E7E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "SgAlbEA3AC417",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "TgAsgApp43FB21BA": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "HealthCheckPath": "/index.html",
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "60",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "alblogbucketC97CC057": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "alblogbucketPolicyA74E0CFF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "alblogbucketC97CC057",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "alblogbucketC97CC057",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "alblogbucketC97CC057",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "alblogbucketC97CC057",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "alblogbucketC97CC057",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "alblogbucketC97CC057",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ssminstancerole0E7D791C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
          "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy",
        ],
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ASG App Stacks 6`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Aurora2CBAB212": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql11",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "DatabaseName": "mydbname",
        "EnableCloudwatchLogsExports": Array [
          "postgresql",
        ],
        "Engine": "aurora-postgresql",
        "EngineVersion": "11.9",
        "KmsKeyId": Object {
          "Fn::ImportValue": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "BLEADBAuroraPgAuroraSecretC8E806513fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "dbadmin",
        "Port": 5432,
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraSecurityGroup3440C66D",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraCPUUtil2EEE6630": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "Aurora2CBAB212",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraInstance10510C5D1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "Aurora2CBAB212",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "BLEA-DBAuroraPg1",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::ImportValue": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraInstance2BC8C1D03": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "Aurora2CBAB212",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "BLEA-DBAuroraPg2",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::ImportValue": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraLogRetentionpostgresqlBFB2AD06": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "Aurora2CBAB212",
              },
              "/postgresql",
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraSecretAttachmentEAAB0558": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "BLEADBAuroraPgAuroraSecretC8E806513fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "Aurora2CBAB212",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraSecurityGroup3440C66D": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraSecurityGroupBLEAASGAppSgApp6E278B2EIndirectPortfromE06BEE8B": Object {
      "Properties": Object {
        "Description": "to BLEADBAuroraPgAuroraSecurityGroup40CC001D:{IndirectPort}",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AuroraSecurityGroup3440C66D",
            "GroupId",
          ],
        },
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::ImportValue": "BLEA-ASGApp:ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119",
        },
        "IpProtocol": "tcp",
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "AuroraSecurityGroupfromBLEAASGAppSgApp6E278B2EIndirectPort4D585AB1": Object {
      "Properties": Object {
        "Description": "from BLEAASGAppSgApp6E278B2E:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AuroraSecurityGroup3440C66D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "BLEA-ASGApp:ExportsOutputFnGetAttSgApp7DE78E7EGroupIdBE09B119",
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSubnetsC4DF45C9": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Aurora database",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
          },
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "BLEADBAuroraPgAuroraSecretC8E806513fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"dbadmin\\"}",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RdsEventsCluster": Object {
      "Properties": Object {
        "Enabled": true,
        "EventCategories": Array [
          "failure",
          "failover",
          "maintenance",
        ],
        "SnsTopicArn": Object {
          "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
        },
        "SourceType": "db-cluster",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::EventSubscription",
    },
    "RdsEventsInstances": Object {
      "Properties": Object {
        "Enabled": true,
        "EventCategories": Array [
          "availability",
          "configuration change",
          "deletion",
          "failover",
          "failure",
          "maintenance",
          "notification",
          "recovery",
        ],
        "SnsTopicArn": Object {
          "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
        },
        "SourceType": "db-instance",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::EventSubscription",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
