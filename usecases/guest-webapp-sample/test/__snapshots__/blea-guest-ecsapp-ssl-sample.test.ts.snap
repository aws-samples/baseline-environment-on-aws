// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ChatbotChannel": Object {
      "Properties": Object {
        "ConfigurationName": "BLEA-ChatbotMonitor-T8XXXXXXX",
        "IamRoleArn": Object {
          "Fn::GetAtt": Array [
            "ChatbotRole8A87AA1F",
            "Arn",
          ],
        },
        "SlackChannelId": "C01YYYYYYYY",
        "SlackWorkspaceId": "T8XXXXXXX",
        "SnsTopicArns": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
      },
      "Type": "AWS::Chatbot::SlackChannelConfiguration",
    },
    "ChatbotRole8A87AA1F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "chatbot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/ReadOnlyAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchReadOnlyAccess",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 2`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821": Object {
      "Export": Object {
        "Name": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
      },
      "Value": Object {
        "Ref": "MonitorAlarmTopic9C746E8C",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "MonitorAlarmEmail9C782A25": Object {
      "Properties": Object {
        "Endpoint": "notify-monitoring@example.com",
        "Protocol": "email",
        "TopicArn": Object {
          "Ref": "MonitorAlarmTopic9C746E8C",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "MonitorAlarmTopic9C746E8C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "MonitorAlarmTopicPolicy7BD5FCD1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudwatch.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "MonitorAlarmTopic9C746E8C",
              },
              "Sid": "0",
            },
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
              "Resource": Object {
                "Ref": "MonitorAlarmTopic9C746E8C",
              },
              "Sid": "1",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "MonitorAlarmTopic9C746E8C",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 3`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttKey961B73FDArn5A860C43": Object {
      "Export": Object {
        "Name": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "Key961B73FD",
          "Arn",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Key961B73FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "for App",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Condition": Object {
                "ArnLike": Object {
                  "kms:EncryptionContext:aws:logs:arn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.ap-northeast-1.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "KeyAlias910D852D": Object {
      "Properties": Object {
        "AliasName": "alias/BLEA-AppKey-for-app",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "Key961B73FD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 4`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefVpc8378EB38272D6E3A": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
      },
      "Value": Object {
        "Ref": "Vpc8378EB38",
      },
    },
    "ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
      },
      "Value": Object {
        "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
      },
    },
    "ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
      },
      "Value": Object {
        "Ref": "VpcProtectedSubnet2SubnetC22C3325",
      },
    },
    "ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
      },
      "Value": Object {
        "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
      },
    },
    "ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740": Object {
      "Export": Object {
        "Name": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
      },
      "Value": Object {
        "Ref": "VpcPublicSubnet2Subnet691E08A3",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "FlowLogBucket0863ACCA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "Key961B73FD",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "FlowLogBucketPolicyD22C263C": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FlowLogBucket0863ACCA",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FlowLogBucket0863ACCA",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FlowLogBucket0863ACCA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Key961B73FD": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "for VPC Flow log",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "KeyAlias910D852D": Object {
      "Properties": Object {
        "AliasName": "alias/BLEA-Vpc-for-flowlog",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "Key961B73FD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "NaclPrivate8CEDB4C5": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPrivateDefaultAssociationBLEAVpcPrivateSubnet1EF53EF1ECC2CE1DC": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateDefaultAssociationBLEAVpcPrivateSubnet224E1285EE1D2ADA4": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPrivateNaclEgressPrivate072DB69C": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPrivateNaclIngressPrivate7EEDF85F": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": Object {
          "Ref": "NaclPrivate8CEDB4C5",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 120,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublic8DAE29D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::NetworkAcl",
    },
    "NaclPublicDefaultAssociationBLEAVpcPublicSubnet1307AA0A438FD5EFD": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicDefaultAssociationBLEAVpcPublicSubnet24705B68BBC24C976": Object {
      "Properties": Object {
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
    },
    "NaclPublicNaclEgressPublic3EA4D0C4": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NaclPublicNaclIngressPublicF18E2B85": Object {
      "Properties": Object {
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "NetworkAclId": Object {
          "Ref": "NaclPublic8DAE29D3",
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 100,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.100.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcEc2EndpointForPrivateEB1488F4": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEc2EndpointForPrivateSecurityGroupF9FF14F0",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ec2",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEc2EndpointForPrivateSecurityGroupF9FF14F0": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/Ec2EndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEc2MessagesEndpointForPrivate0809410D": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEc2MessagesEndpointForPrivateSecurityGroup7FBFF800",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ec2messages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEc2MessagesEndpointForPrivateSecurityGroup7FBFF800": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/Ec2MessagesEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEcrDkrEndpointForPrivate351B435F": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEcrDkrEndpointForPrivateSecurityGroup116DBAFC",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.dkr",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDkrEndpointForPrivateSecurityGroup116DBAFC": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/EcrDkrEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEcrEndpointForPrivate33BF5765": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcEcrEndpointForPrivateSecurityGroup72F5BC77",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.api",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrEndpointForPrivateSecurityGroup72F5BC77": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/EcrEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcFlowLogsFlowLogBB096F0F": Object {
      "DependsOn": Array [
        "FlowLogBucketPolicyD22C263C",
      ],
      "Properties": Object {
        "LogDestination": Object {
          "Fn::GetAtt": Array [
            "FlowLogBucket0863ACCA",
            "Arn",
          ],
        },
        "LogDestinationType": "s3",
        "ResourceId": Object {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcLogsEndpointForPrivate8D2140E9": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcLogsEndpointForPrivateSecurityGroupDD7F0AEB",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.logs",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcLogsEndpointForPrivateSecurityGroupDD7F0AEB": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/LogsEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.4.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.8.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet1RouteTable69FCECD8": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet1RouteTableAssociation62F625F2": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
        },
        "SubnetId": Object {
          "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet1Subnet38ECE18A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.12.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcProtectedSubnet2RouteTableAssociation960FE2AC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
        },
        "SubnetId": Object {
          "Ref": "VpcProtectedSubnet2SubnetC22C3325",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcProtectedSubnet2RouteTableFA54AE0B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcProtectedSubnet2SubnetC22C3325": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.16.0/22",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Protected",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/ProtectedSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "DependsOn": Array [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.100.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcS3EndpointForPrivateA3FD7ECC": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
          },
          Object {
            "Ref": "VpcPrivateSubnet2RouteTableA678073B",
          },
          Object {
            "Ref": "VpcProtectedSubnet1RouteTable69FCECD8",
          },
          Object {
            "Ref": "VpcProtectedSubnet2RouteTableFA54AE0B",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointForPrivateF5DD8C02": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmEndpointForPrivateSecurityGroupB1574261",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ssm",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointForPrivateSecurityGroupB1574261": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/SsmEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmMessagesEndpointForPrivate03FDDCE7": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmMessagesEndpointForPrivateSecurityGroup37880960",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ssmmessages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcProtectedSubnet1Subnet38ECE18A",
          },
          Object {
            "Ref": "VpcProtectedSubnet2SubnetC22C3325",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmMessagesEndpointForPrivateSecurityGroup37880960": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-Vpc/Vpc/SsmMessagesEndpointForPrivate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
          Object {
            "Key": "Name",
            "Value": "BLEA-Vpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 5`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttWebAclArnEF1FFB35": Object {
      "Export": Object {
        "Name": "BLEA-Waf:ExportsOutputFnGetAttWebAclArnEF1FFB35",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "WebAcl",
          "Arn",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "WebAcl": Object {
      "Properties": Object {
        "DefaultAction": Object {
          "Allow": Object {},
        },
        "Name": "BLEAWebAcl",
        "Rules": Array [
          Object {
            "Name": "AWSManagedRulesCommonRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 1,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesCommonRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesKnownBadInputsRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 2,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesKnownBadInputsRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesKnownBadInputsRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 3,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesAmazonIpReputationList",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesLinuxRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 4,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesLinuxRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesLinuxRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
          Object {
            "Name": "AWSManagedRulesSQLiRuleSet",
            "OverrideAction": Object {
              "Count": Object {},
            },
            "Priority": 5,
            "Statement": Object {
              "ManagedRuleGroupStatement": Object {
                "Name": "AWSManagedRulesSQLiRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": Object {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWS-AWSManagedRulesSQLiRuleSet",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VisibilityConfig": Object {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "BLEAWebAcl",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 6`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": Object {
    "ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5": Object {
      "Export": Object {
        "Name": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "Alb16C2F182",
          "LoadBalancerFullName",
        ],
      },
    },
    "ExportsOutputFnGetAttAlbhttpsEcsAppGroup3BC28E09TargetGroupFullNameCC53A960": Object {
      "Export": Object {
        "Name": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlbhttpsEcsAppGroup3BC28E09TargetGroupFullNameCC53A960",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "AlbhttpsEcsAppGroup3BC28E09",
          "TargetGroupFullName",
        ],
      },
    },
    "ExportsOutputFnGetAttSgAlbEA3AC417GroupId6CDB1929": Object {
      "Export": Object {
        "Name": "BLEA-SSLFrontStack:ExportsOutputFnGetAttSgAlbEA3AC417GroupId6CDB1929",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SgAlbEA3AC417",
          "GroupId",
        ],
      },
    },
    "ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A": Object {
      "Export": Object {
        "Name": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
      },
      "Value": Object {
        "Ref": "AlbhttpsCA4BCF0A",
      },
    },
    "ExportsOutputRefAlbhttpsEcsAppGroup3BC28E0927E2175A": Object {
      "Export": Object {
        "Name": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsEcsAppGroup3BC28E0927E2175A",
      },
      "Value": Object {
        "Ref": "AlbhttpsEcsAppGroup3BC28E09",
      },
    },
    "ExportsOutputRefDistribution830FAC524DF81588": Object {
      "Export": Object {
        "Name": "BLEA-SSLFrontStack:ExportsOutputRefDistribution830FAC524DF81588",
      },
      "Value": Object {
        "Ref": "Distribution830FAC52",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Alb16C2F182": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "alblogbucketC97CC057",
            },
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "SgAlbEA3AC417",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
          },
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbhttpsCA4BCF0A": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Fn::GetAtt": Array [
                "apiCertificateCertificateRequestorResource8F5C9A18",
                "Arn",
              ],
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "AlbhttpsEcsAppGroup3BC28E09",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "Alb16C2F182",
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-TLS-1-2-Ext-2018-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AlbhttpsEcsAppGroup3BC28E09": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "CloudFrontLogBucketE75E505A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudFrontLogBucketPolicy300B6FAE": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CloudFrontLogBucketE75E505A",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CloudFrontLogBucketE75E505A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CloudFrontLogBucketE75E505A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Distribution830FAC52": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "www.example.com",
          ],
          "CacheBehaviors": Array [
            Object {
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "PathPattern": "/static/*",
              "TargetOriginId": "BLEASSLFrontStackDistributionOrigin26A9FB071",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 20,
              "ErrorCode": 403,
              "ResponseCode": 403,
              "ResponsePagePath": "/static/sorry.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "BLEASSLFrontStackDistributionOrigin110216182",
            "ViewerProtocolPolicy": "https-only",
          },
          "DefaultRootObject": "/",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": Object {
            "Bucket": Object {
              "Fn::GetAtt": Array [
                "CloudFrontLogBucketE75E505A",
                "RegionalDomainName",
              ],
            },
            "IncludeCookies": true,
            "Prefix": "CloudFrontAccessLogs/",
          },
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "Alb16C2F182",
                  "DNSName",
                ],
              },
              "Id": "BLEASSLFrontStackDistributionOrigin110216182",
            },
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "WebBucket12880F5B",
                  "RegionalDomainName",
                ],
              },
              "Id": "BLEASSLFrontStackDistributionOrigin26A9FB071",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "DistributionOrigin2S3OriginE484D4BF",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "cfCertificateCertificateRequestorResource9B6D8B73",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "DistributionOrigin2S3OriginE484D4BF": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for BLEASSLFrontStackDistributionOrigin26A9FB071",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "SgAlbEA3AC417": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-SSLFrontStack/SgAlb",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WebAclAssociation": Object {
      "Properties": Object {
        "ResourceArn": Object {
          "Ref": "Alb16C2F182",
        },
        "WebACLArn": Object {
          "Fn::ImportValue": "BLEA-Waf:ExportsOutputFnGetAttWebAclArnEF1FFB35",
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
    "WebBucket12880F5B": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "WebBucketPolicy95D08FAA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "WebBucket12880F5B",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "WebBucket12880F5B",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WebBucket12880F5B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "DistributionOrigin2S3OriginE484D4BF",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "WebBucket12880F5B",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "alblogbucketC97CC057": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "alblogbucketPolicyA74E0CFF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "alblogbucketC97CC057",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "alblogbucketC97CC057",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "alblogbucketC97CC057",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "alblogbucketC97CC057",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "alblogbucketC97CC057",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "alblogbucketC97CC057",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "apiCertificateCertificateRequestorFunctionF3A49B43": Object {
      "DependsOn": Array [
        "apiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyD8E95BD0",
        "apiCertificateCertificateRequestorFunctionServiceRole7F45A058",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "861509f9607aa6bb9fd7034fb10fe6f0c60d91dfd7f010b9ef666869dec9bbd9.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "apiCertificateCertificateRequestorFunctionServiceRole7F45A058",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "apiCertificateCertificateRequestorFunctionServiceRole7F45A058": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "apiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyD8E95BD0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Condition": Object {
                "ForAllValues:StringEquals": Object {
                  "route53:ChangeResourceRecordSetsActions": Array [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": Array [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": Object {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": Array [
                    "*.www.example.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/Z0123456789",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyD8E95BD0",
        "Roles": Array [
          Object {
            "Ref": "apiCertificateCertificateRequestorFunctionServiceRole7F45A058",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "apiCertificateCertificateRequestorResource8F5C9A18": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "www.example.com",
        "HostedZoneId": "Z0123456789",
        "Region": "ap-northeast-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "apiCertificateCertificateRequestorFunctionF3A49B43",
            "Arn",
          ],
        },
        "Tags": Object {
          "Environment": "Development",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "cfCertificateCertificateRequestorFunctionE6AD6A96": Object {
      "DependsOn": Array [
        "cfCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy495CD49A",
        "cfCertificateCertificateRequestorFunctionServiceRole97113ACC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "861509f9607aa6bb9fd7034fb10fe6f0c60d91dfd7f010b9ef666869dec9bbd9.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "cfCertificateCertificateRequestorFunctionServiceRole97113ACC",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "cfCertificateCertificateRequestorFunctionServiceRole97113ACC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "cfCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy495CD49A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Condition": Object {
                "ForAllValues:StringEquals": Object {
                  "route53:ChangeResourceRecordSetsActions": Array [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": Array [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": Object {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": Array [
                    "*.www.example.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/Z0123456789",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "cfCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy495CD49A",
        "Roles": Array [
          Object {
            "Ref": "cfCertificateCertificateRequestorFunctionServiceRole97113ACC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "cfCertificateCertificateRequestorResource9B6D8B73": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "www.example.com",
        "HostedZoneId": "Z0123456789",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "cfCertificateCertificateRequestorFunctionE6AD6A96",
            "Arn",
          ],
        },
        "Tags": Object {
          "Environment": "Development",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "sampleApp494D01F0": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "Distribution830FAC52",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "Z0123456789",
        "Name": "www.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 7`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttAlbTgUnHealthyHostCountD4A96E1AArnF5DDFCE6": Object {
      "Export": Object {
        "Name": "BLEA-ECSApp:ExportsOutputFnGetAttAlbTgUnHealthyHostCountD4A96E1AArnF5DDFCE6",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "AlbTgUnHealthyHostCountD4A96E1A",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2": Object {
      "Export": Object {
        "Name": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "FargateServiceAC2B3B85",
          "Name",
        ],
      },
    },
    "ExportsOutputFnGetAttSgFargateB5F998B7GroupId58365FB1": Object {
      "Export": Object {
        "Name": "BLEA-ECSApp:ExportsOutputFnGetAttSgFargateB5F998B7GroupId58365FB1",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SgFargateB5F998B7",
          "GroupId",
        ],
      },
    },
    "ExportsOutputRefClusterEB0386A796A0E3FE": Object {
      "Export": Object {
        "Name": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
      },
      "Value": Object {
        "Ref": "ClusterEB0386A7",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AlbHttp4xxAA038176": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "HTTPCode_ELB_4XX_Count",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AlbHttp5xx7EA5097F": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "HTTPCode_ELB_5XX_Count",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AlbResponseTimeCFBA9063": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "TargetResponseTime",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 100,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AlbTgHealthyHostCount48815779": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlbhttpsEcsAppGroup3BC28E09TargetGroupFullNameCC53A960",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "HealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AlbTgUnHealthyHostCountD4A96E1A": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlbhttpsEcsAppGroup3BC28E09TargetGroupFullNameCC53A960",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cluster3DA9CCBA": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DefaultCapacityProviderStrategy": Array [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "ECSServiceActionEventRule82991B64": Object {
      "Properties": Object {
        "Description": "CloudWatch Event Rule to send notification on ECS Service action events.",
        "EventPattern": Object {
          "detail": Object {
            "eventType": Array [
              "WARN",
              "ERROR",
            ],
          },
          "detail-type": Array [
            "ECS Service Action",
          ],
          "source": Array [
            "aws.ecs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ECSServiceDeploymentEventRule8B457610": Object {
      "Properties": Object {
        "Description": "CloudWatch Event Rule to send notification on ECS Service deployment events.",
        "EventPattern": Object {
          "detail": Object {
            "eventType": Array [
              "WARN",
              "ERROR",
            ],
          },
          "detail-type": Array [
            "ECS Deployment State Change",
          ],
          "source": Array [
            "aws.ecs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "EcsServiceTaskRoleB376410D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsTask48F71CB8": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "ENVIRONMENT_VARIABLE_SAMPLE_KEY",
                "Value": "Environment Variable Sample Value",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.ap-northeast-1.",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/ecr-blea-ecsapp/docker/library/httpd:latest",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FargateLogGroupA4B4CA79",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "BLEA-ECSApp-",
              },
            },
            "Name": "EcsApp",
            "PortMappings": Array [
              Object {
                "ContainerPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "EcsTaskExecutionRoleC0B6A84D",
            "Arn",
          ],
        },
        "Family": "BLEAECSAppEcsTask9097B425",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "EcsServiceTaskRoleB376410D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EcsTaskExecutionRoleC0B6A84D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "ecr:BatchImportUpstreamImage",
                    "ecr:CreateRepository",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "ecrPullThroughCache",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/ecr-blea-ecsapp/docker/library/httpd",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FargateLogGroupA4B4CA79",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsTaskExecutionRoleDefaultPolicyDCEEFDC3",
        "Roles": Array [
          Object {
            "Ref": "EcsTaskExecutionRoleC0B6A84D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FargateCpuUtilD5713973": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": Array [
          Object {
            "Name": "ClusterName",
            "Value": Object {
              "Ref": "ClusterEB0386A7",
            },
          },
          Object {
            "Name": "ServiceName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "FargateServiceAC2B3B85",
                "Name",
              ],
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 80,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FargateLogGroupA4B4CA79": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::ImportValue": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "RetentionInDays": 90,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FargateServiceAC2B3B85": Object {
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": Array [
          Object {
            "ContainerName": "EcsApp",
            "ContainerPort": 80,
            "TargetGroupArn": Object {
              "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsEcsAppGroup3BC28E0927E2175A",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "SgFargateB5F998B7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
              },
              Object {
                "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
              },
            ],
          },
        },
        "PlatformVersion": "LATEST",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "EcsTask48F71CB8",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FargateServiceTaskCountTarget8CF96FEA": Object {
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 2,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "FargateServiceAC2B3B85",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "FargateServiceTaskCountTargetCpuScaling086750CA": Object {
      "Properties": Object {
        "PolicyName": "BLEAECSAppFargateServiceTaskCountTargetCpuScaling9E56094C",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "FargateServiceTaskCountTarget8CF96FEA",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "FargateServiceTaskCountTargetRequestScaling7BAE812D": Object {
      "Properties": Object {
        "PolicyName": "BLEAECSAppFargateServiceTaskCountTargetRequestScaling2907EA74",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "FargateServiceTaskCountTarget8CF96FEA",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefAlbhttpsCA4BCF0A9F13C47A",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlbhttpsEcsAppGroup3BC28E09TargetGroupFullNameCC53A960",
                  },
                ],
              ],
            },
          },
          "TargetValue": 10000,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "PullThroughCacheRule": Object {
      "Properties": Object {
        "EcrRepositoryPrefix": "ecr-blea-ecsapp",
        "UpstreamRegistryUrl": "public.ecr.aws",
      },
      "Type": "AWS::ECR::PullThroughCacheRule",
    },
    "SgFargateB5F998B7": Object {
      "Properties": Object {
        "GroupDescription": "BLEA-ECSApp/SgFargate",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SgFargatefromBLEASSLFrontStackSgAlbE562905E80FFE402B3": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SgFargateB5F998B7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttSgAlbEA3AC417GroupId6CDB1929",
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "enableScanning7E3D4D91": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "ImageScanningConfiguration": Object {
          "ScanOnPush": true,
        },
        "RepositoryName": "ecr-blea-ecsapp/docker/library/httpd",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 8`] = `
Object {
  "Outputs": Object {
    "ExportsOutputRefAurora2CBAB212533F1A7B": Object {
      "Export": Object {
        "Name": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
      },
      "Value": Object {
        "Ref": "Aurora2CBAB212",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Aurora2CBAB212": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": "default.aurora-postgresql11",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "DatabaseName": "mydbname",
        "EnableCloudwatchLogsExports": Array [
          "postgresql",
        ],
        "Engine": "aurora-postgresql",
        "EngineVersion": "11.9",
        "KmsKeyId": Object {
          "Fn::ImportValue": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "BLEADBAuroraPgAuroraSecretC8E806513fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "dbadmin",
        "Port": 5432,
        "StorageEncrypted": true,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "AuroraSecurityGroup3440C66D",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "AuroraCPUUtil2EEE6630": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": Array [
          Object {
            "Name": "DBClusterIdentifier",
            "Value": Object {
              "Ref": "Aurora2CBAB212",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 90,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AuroraInstance10510C5D1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "Aurora2CBAB212",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "BLEA-DBAuroraPg1",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::ImportValue": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraInstance2BC8C1D03": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "Aurora2CBAB212",
        },
        "DBInstanceClass": "db.t3.medium",
        "DBInstanceIdentifier": "BLEA-DBAuroraPg2",
        "DBSubnetGroupName": Object {
          "Ref": "AuroraSubnetsC4DF45C9",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsKMSKeyId": Object {
          "Fn::ImportValue": "BLEA-AppKey:ExportsOutputFnGetAttKey961B73FDArn5A860C43",
        },
        "PerformanceInsightsRetentionPeriod": 7,
        "PubliclyAccessible": false,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "AuroraLogRetentionpostgresqlBFB2AD06": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/rds/cluster/",
              Object {
                "Ref": "Aurora2CBAB212",
              },
              "/postgresql",
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuroraSecretAttachmentEAAB0558": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "BLEADBAuroraPgAuroraSecretC8E806513fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": Object {
          "Ref": "Aurora2CBAB212",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "AuroraSecurityGroup3440C66D": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuroraSecurityGroupfromBLEAECSAppSgFargateA43D3754IndirectPort5A254DEC": Object {
      "Properties": Object {
        "Description": "from BLEAECSAppSgFargateA43D3754:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AuroraSecurityGroup3440C66D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttSgFargateB5F998B7GroupId58365FB1",
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "Aurora2CBAB212",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuroraSubnetsC4DF45C9": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Aurora database",
        "SubnetIds": Array [
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet1Subnet38ECE18AD245BDD6",
          },
          Object {
            "Fn::ImportValue": "BLEA-Vpc:ExportsOutputRefVpcProtectedSubnet2SubnetC22C3325C694ECFB",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "BLEADBAuroraPgAuroraSecretC8E806513fdaad7efa858a3daf9490cf0a702aeb": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"dbadmin\\"}",
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RdsEventsCluster": Object {
      "Properties": Object {
        "Enabled": true,
        "EventCategories": Array [
          "failure",
          "failover",
          "maintenance",
        ],
        "SnsTopicArn": Object {
          "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
        },
        "SourceType": "db-cluster",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::EventSubscription",
    },
    "RdsEventsInstances": Object {
      "Properties": Object {
        "Enabled": true,
        "EventCategories": Array [
          "availability",
          "configuration change",
          "deletion",
          "failover",
          "failure",
          "maintenance",
          "notification",
          "recovery",
        ],
        "SnsTopicArn": Object {
          "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
        },
        "SourceType": "db-instance",
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::RDS::EventSubscription",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 9`] = `
Object {
  "Outputs": Object {
    "ExportsOutputFnGetAttcanaryDurationC40A61C8ArnEA607FBA": Object {
      "Export": Object {
        "Name": "BLEA-ECSAppSSLCanary:ExportsOutputFnGetAttcanaryDurationC40A61C8ArnEA607FBA",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "canaryDurationC40A61C8",
          "Arn",
        ],
      },
    },
    "ExportsOutputFnGetAttcanaryFailed044C3840ArnC37ECEF2": Object {
      "Export": Object {
        "Name": "BLEA-ECSAppSSLCanary:ExportsOutputFnGetAttcanaryFailed044C3840ArnC37ECEF2",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "canaryFailed044C3840",
          "Arn",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BLEACanaryApp5871FBE7": Object {
      "Properties": Object {
        "ArtifactS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "canaryArtifact2E578620",
              },
            ],
          ],
        },
        "Code": Object {
          "Handler": "index.handler",
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "1e64e462d93160eb5230b00e665705bfaf2299d9c302ab56dd093bccbe387c4f.zip",
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "BLEACanaryAppServiceRole49FF798F",
            "Arn",
          ],
        },
        "Name": "bleaecsappsslca4a6110",
        "RunConfig": Object {
          "EnvironmentVariables": Object {
            "TARGETHOST": "www.example.com",
            "TARGETPATH": "/",
          },
        },
        "RuntimeVersion": "syn-nodejs-puppeteer-3.5",
        "Schedule": Object {
          "DurationInSeconds": "0",
          "Expression": "rate(1 minute)",
        },
        "StartCanaryAfterCreation": true,
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::Synthetics::Canary",
    },
    "BLEACanaryAppServiceRole49FF798F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:ListAllMyBuckets",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "s3:GetBucketLocation",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "canaryArtifact2E578620",
                      "Arn",
                    ],
                  },
                },
                Object {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "canaryArtifact2E578620",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
                Object {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": Object {
                    "StringEquals": Object {
                      "cloudwatch:namespace": "CloudWatchSynthetics",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:ap-northeast-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/cwsyn-*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "canaryPolicy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "appCanalyPolicyToS38FB38019": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetBucketLocation",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "canaryArtifact2E578620",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "appCanalyPolicyToS38FB38019",
        "Roles": Array [
          Object {
            "Ref": "BLEACanaryAppServiceRole49FF798F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "canaryArtifact2E578620": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "Environment",
            "Value": "Development",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "canaryArtifactPolicy2CF1C0A0": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "canaryArtifact2E578620",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "canaryArtifact2E578620",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "canaryArtifact2E578620",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "canaryDurationC40A61C8": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 2,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "BLEACanaryApp5871FBE7",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "Duration",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 400,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "canaryFailed044C3840": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::ImportValue": "BLEA-MonitorAlarm:ExportsOutputRefMonitorAlarmTopic9C746E8C5F969821",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": Array [
          Object {
            "Name": "CanaryName",
            "Value": Object {
              "Ref": "BLEACanaryApp5871FBE7",
            },
          },
        ],
        "EvaluationPeriods": 3,
        "MetricName": "Failed",
        "Namespace": "CloudWatchSynthetics",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`BLEA Guest Stacks GuestAccount ECS App SSL Stacks 10`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Dashboard9E4231ED": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"markdown\\":\\"# Canary\\"}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":0,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Canary response time\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSAppSSLCanary:ExportsOutputFnGetAttcanaryDurationC40A61C8ArnEA607FBA",
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":12,\\"y\\":1,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Canary request failed\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSAppSSLCanary:ExportsOutputFnGetAttcanaryFailed044C3840ArnC37ECEF2",
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":7,\\"properties\\":{\\"markdown\\":\\"# Requests\\"}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":8,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"CloudFront Requests\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/CloudFront\\",\\"Requests\\",\\"DistributionId\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefDistribution830FAC524DF81588",
              },
              "\\",\\"Region\\",\\"Global\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"region\\":\\"us-east-1\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":8,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ALB Requests\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ApplicationELB\\",\\"RequestCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"AWS/ApplicationELB\\",\\"NewConnectionCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"AWS/ApplicationELB\\",\\"RejectedConnectionCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":12,\\"y\\":8,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Target Group Requests\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ApplicationELB\\",\\"HTTPCode_Target_2XX_Count\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":18,\\"y\\":8,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Aurora Connections\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/RDS\\",\\"DatabaseConnections\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"Writer: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"AWS/RDS\\",\\"DatabaseConnections\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"READER\\",{\\"label\\":\\"Reader: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":14,\\"properties\\":{\\"markdown\\":\\"# Response Time\\"}},{\\"type\\":\\"metric\\",\\"width\\":8,\\"height\\":6,\\"x\\":0,\\"y\\":15,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Target Group Response Time\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ApplicationELB\\",\\"TargetResponseTime\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":8,\\"height\\":6,\\"x\\":8,\\"y\\":15,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Aurora Operation Lantency (Writer)\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/RDS\\",\\"InsertLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"SelectLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"UpdateLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"CommitLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"DDLLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"DeleteLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"ReadLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}],[\\"AWS/RDS\\",\\"WriteLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":8,\\"height\\":6,\\"x\\":16,\\"y\\":15,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Aurora Operation Lantency (Reader)\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/RDS\\",\\"SelectLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"READER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"ReadLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"READER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}],[\\"AWS/RDS\\",\\"WriteLatency\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"READER\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":21,\\"properties\\":{\\"markdown\\":\\"# Errors\\"}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":22,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"CloudFront Error Rates\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":true,\\"metrics\\":[[\\"AWS/CloudFront\\",\\"5xxErrorRate\\",\\"DistributionId\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefDistribution830FAC524DF81588",
              },
              "\\",\\"Region\\",\\"Global\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"region\\":\\"us-east-1\\",\\"period\\":60}],[\\"AWS/CloudFront\\",\\"4xxErrorRate\\",\\"DistributionId\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputRefDistribution830FAC524DF81588",
              },
              "\\",\\"Region\\",\\"Global\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"region\\":\\"us-east-1\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":22,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ALB Errors\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ApplicationELB\\",\\"ClientTLSNegotiationErrorCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"AWS/ApplicationELB\\",\\"HTTPCode_ELB_5XX_Count\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"AWS/ApplicationELB\\",\\"HTTPCode_ELB_4XX_Count\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":12,\\"y\\":22,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Alarm for UnHealthy Host in Target Group\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"annotations\\":{\\"alarms\\":[\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttAlbTgUnHealthyHostCountD4A96E1AArnF5DDFCE6",
              },
              "\\"]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":18,\\"y\\":22,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Target Group Errors\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":true,\\"metrics\\":[[\\"AWS/ApplicationELB\\",\\"HTTPCode_Target_5XX_Count\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"AWS/ApplicationELB\\",\\"HTTPCode_Target_4XX_Count\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"AWS/ApplicationELB\\",\\"TargetConnectionErrorCount\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"text\\",\\"width\\":24,\\"height\\":1,\\"x\\":0,\\"y\\":28,\\"properties\\":{\\"markdown\\":\\"# Resources\\"}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":29,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ECS CPU Utilization\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ECS\\",\\"CPUUtilization\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":29,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ECS Memory Utilization\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ECS\\",\\"MemoryUtilization\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":12,\\"y\\":29,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ECS Desired Task Count\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"ECS/ContainerInsights\\",\\"DesiredTaskCount\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":18,\\"y\\":29,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ECS Task Count\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":true,\\"metrics\\":[[\\"ECS/ContainerInsights\\",\\"RunningTaskCount\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"ECS/ContainerInsights\\",\\"PendingTaskCount\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":0,\\"y\\":35,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ECS Auto Scaling with Requests per tasks\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ApplicationELB\\",\\"RequestCountPerTarget\\",\\"LoadBalancer\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlb16C2F182LoadBalancerFullName73BA17C5",
              },
              "\\",\\"TargetGroup\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-SSLFrontStack:ExportsOutputFnGetAttAlbhttpsEcsAppGroup3BC28E09TargetGroupFullNameCC53A960",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"stat\\":\\"Sum\\"}],[\\"ECS/ContainerInsights\\",\\"RunningTaskCount\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}],[\\"ECS/ContainerInsights\\",\\"PendingTaskCount\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}]],\\"annotations\\":{\\"horizontal\\":[{\\"value\\":10000,\\"label\\":\\"Threshold: Requests per tasks\\",\\"color\\":\\"#aec7e8\\",\\"fill\\":\\"below\\",\\"yAxis\\":\\"left\\"}]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":12,\\"height\\":6,\\"x\\":12,\\"y\\":35,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"ECS Auto Scaling with CPU Utilization\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/ECS\\",\\"CPUUtilization\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"ECS/ContainerInsights\\",\\"RunningTaskCount\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}],[\\"ECS/ContainerInsights\\",\\"PendingTaskCount\\",\\"ClusterName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputRefClusterEB0386A796A0E3FE",
              },
              "\\",\\"ServiceName\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-ECSApp:ExportsOutputFnGetAttFargateServiceAC2B3B85NameFCF2B9A2",
              },
              "\\",{\\"label\\":\\"\${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60,\\"yAxis\\":\\"right\\"}]],\\"annotations\\":{\\"horizontal\\":[{\\"value\\":50,\\"label\\":\\"Threshold: CPU Utilization\\",\\"color\\":\\"#aec7e8\\",\\"fill\\":\\"below\\",\\"yAxis\\":\\"left\\"}]},\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":0,\\"y\\":41,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Aurora CPU Utilization\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/RDS\\",\\"CPUUtilization\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"Writer: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"CPUUtilization\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"READER\\",{\\"label\\":\\"Reader: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":6,\\"y\\":41,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Aurora Free Memory\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/RDS\\",\\"FreeableMemory\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"Writer: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"FreeableMemory\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"READER\\",{\\"label\\":\\"Reader: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}},{\\"type\\":\\"metric\\",\\"width\\":6,\\"height\\":6,\\"x\\":12,\\"y\\":41,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Aurora Free Local Storage\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"stacked\\":false,\\"metrics\\":[[\\"AWS/RDS\\",\\"FreeLocalStorage\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"WRITER\\",{\\"label\\":\\"Writer: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}],[\\"AWS/RDS\\",\\"FreeLocalStorage\\",\\"DBClusterIdentifier\\",\\"",
              Object {
                "Fn::ImportValue": "BLEA-DBAuroraPg:ExportsOutputRefAurora2CBAB212533F1A7B",
              },
              "\\",\\"Role\\",\\"READER\\",{\\"label\\":\\"Reader: \${PROP('MetricName')} /\${PROP('Period')}sec\\",\\"period\\":60}]],\\"yAxis\\":{}}}]}",
            ],
          ],
        },
        "DashboardName": "BLEA-ECSAppSSL",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
